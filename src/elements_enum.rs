#[derive(Copy, Clone)]
pub enum Element {
    H = 1,
    He = 2,
    Li = 3,
    Be = 4,
    B = 5,
    C = 6,
    N = 7,
    O = 8,
    F = 9,
    Ne = 10,
    Na = 11,
    Mg = 12,
    Al = 13,
    Si = 14,
    P = 15,
    S = 16,
    Cl = 17,
    Ar = 18,
    K = 19,
    Ca = 20,
    Sc = 21,
    Ti = 22,
    V = 23,
    Cr = 24,
    Mn = 25,
    Fe = 26,
    Co = 27,
    Ni = 28,
    Cu = 29,
    Zn = 30,
    Ga = 31,
    Ge = 32,
    As = 33,
    Se = 34,
    Br = 35,
    Kr = 36,
    Rb = 37,
    Sr = 38,
    Y = 39,
    Zr = 40,
    Nb = 41,
    Mo = 42,
    Tc = 43,
    Ru = 44,
    Rh = 45,
    Pd = 46,
    Ag = 47,
    Cd = 48,
    In = 49,
    Sn = 50,
    Sb = 51,
    Te = 52,
    I = 53,
    Xe = 54,
    Cs = 55,
    Ba = 56,
    La = 57,
    Ce = 58,
    Pr = 59,
    Nd = 60,
    Pm = 61,
    Sm = 62,
    Eu = 63,
    Gd = 64,
    Tb = 65,
    Dy = 66,
    Ho = 67,
    Er = 68,
    Tm = 69,
    Yb = 70,
    Lu = 71,
    Hf = 72,
    Ta = 73,
    W = 74,
    Re = 75,
    Os = 76,
    Ir = 77,
    Pt = 78,
    Au = 79,
    Hg = 80,
    Tl = 81,
    Pb = 82,
    Bi = 83,
    Po = 84,
    At = 85,
    Rn = 86,
    Fr = 87,
    Ra = 88,
    Ac = 89,
    Th = 90,
    Pa = 91,
    U = 92,
    Np = 93,
    Pu = 94,
    Am = 95,
    Cm = 96,
    Bk = 97,
    Cf = 98,
    Es = 99,
    Fm = 100,
    Md = 101,
    No = 102,
    Lr = 103,
    Rf = 104,
    Db = 105,
    Sg = 106,
    Bh = 107,
    Hs = 108,
    Mt = 109,
    Ds = 110,
    Rg = 111,
}

impl Element {
    fn atomic_number(&self) -> u16 { *self as u16 }

    fn symbol(&self) -> &'static str {
        use self::Element::*;
        match *self {
            H => "H",
            He => "He",
            Li => "Li",
            Be => "Be",
            B => "B",
            C => "C",
            N => "N",
            O => "O",
            F => "F",
            Ne => "Ne",
            Na => "Na",
            Mg => "Mg",
            Al => "Al",
            Si => "Si",
            P => "P",
            S => "S",
            Cl => "Cl",
            Ar => "Ar",
            K => "K",
            Ca => "Ca",
            Sc => "Sc",
            Ti => "Ti",
            V => "V",
            Cr => "Cr",
            Mn => "Mn",
            Fe => "Fe",
            Co => "Co",
            Ni => "Ni",
            Cu => "Cu",
            Zn => "Zn",
            Ga => "Ga",
            Ge => "Ge",
            As => "As",
            Se => "Se",
            Br => "Br",
            Kr => "Kr",
            Rb => "Rb",
            Sr => "Sr",
            Y => "Y",
            Zr => "Zr",
            Nb => "Nb",
            Mo => "Mo",
            Tc => "Tc",
            Ru => "Ru",
            Rh => "Rh",
            Pd => "Pd",
            Ag => "Ag",
            Cd => "Cd",
            In => "In",
            Sn => "Sn",
            Sb => "Sb",
            Te => "Te",
            I => "I",
            Xe => "Xe",
            Cs => "Cs",
            Ba => "Ba",
            La => "La",
            Ce => "Ce",
            Pr => "Pr",
            Nd => "Nd",
            Pm => "Pm",
            Sm => "Sm",
            Eu => "Eu",
            Gd => "Gd",
            Tb => "Tb",
            Dy => "Dy",
            Ho => "Ho",
            Er => "Er",
            Tm => "Tm",
            Yb => "Yb",
            Lu => "Lu",
            Hf => "Hf",
            Ta => "Ta",
            W => "W",
            Re => "Re",
            Os => "Os",
            Ir => "Ir",
            Pt => "Pt",
            Au => "Au",
            Hg => "Hg",
            Tl => "Tl",
            Pb => "Pb",
            Bi => "Bi",
            Po => "Po",
            At => "At",
            Rn => "Rn",
            Fr => "Fr",
            Ra => "Ra",
            Ac => "Ac",
            Th => "Th",
            Pa => "Pa",
            U => "U",
            Np => "Np",
            Pu => "Pu",
            Am => "Am",
            Cm => "Cm",
            Bk => "Bk",
            Cf => "Cf",
            Es => "Es",
            Fm => "Fm",
            Md => "Md",
            No => "No",
            Lr => "Lr",
            Rf => "Rf",
            Db => "Db",
            Sg => "Sg",
            Bh => "Bh",
            Hs => "Hs",
            Mt => "Mt",
            Ds => "Ds",
            Rg => "Rg",
        }
    }

    #[inline(never)]
    fn atomic_mass(&self) -> f64 {
        use self::Element::*;
        match *self {
            H => 1.00782503207,
            He => 4.00260325415,
            Li => 7.01600455,
            Be => 9.0121822,
            B => 11.0093054,
            C => 12.0,
            N => 14.0030740048,
            O => 15.9949146196,
            F => 18.99840322,
            Ne => 19.9924401754,
            Na => 22.9897692809,
            Mg => 23.9850417,
            Al => 26.98153863,
            Si => 27.9769265325,
            P => 30.97376163,
            S => 31.972071,
            Cl => 34.96885268,
            Ar => 39.9623831225,
            K => 38.96370668,
            Ca => 39.96259098,
            Sc => 44.9559119,
            Ti => 47.9479463,
            V => 50.9439595,
            Cr => 51.9405075,
            Mn => 54.9380451,
            Fe => 55.9349375,
            Co => 58.933195,
            Ni => 57.9353429,
            Cu => 62.9295975,
            Zn => 63.9291422,
            Ga => 68.9255736,
            Ge => 73.9211778,
            As => 74.9215965,
            Se => 79.9165213,
            Br => 78.9183371,
            Kr => 83.911507,
            Rb => 84.911789738,
            Sr => 87.9056121,
            Y => 88.9058483,
            Zr => 89.9047044,
            Nb => 92.9063781,
            Mo => 97.9054082,
            Tc => 97.907216,
            Ru => 101.9043493,
            Rh => 102.905504,
            Pd => 105.903486,
            Ag => 106.905097,
            Cd => 113.9033585,
            In => 114.903878,
            Sn => 119.9021947,
            Sb => 120.9038157,
            Te => 129.9062244,
            I => 126.904473,
            Xe => 131.9041535,
            Cs => 132.905451933,
            Ba => 137.9052472,
            La => 138.9063533,
            Ce => 139.9054387,
            Pr => 140.9076528,
            Nd => 141.9077233,
            Pm => 144.912749,
            Sm => 151.9197324,
            Eu => 152.9212303,
            Gd => 157.9241039,
            Tb => 158.9253468,
            Dy => 163.9291748,
            Ho => 164.9303221,
            Er => 165.9302931,
            Tm => 168.9342133,
            Yb => 173.9388621,
            Lu => 174.9407718,
            Hf => 179.94655,
            Ta => 180.9479958,
            W => 183.9509312,
            Re => 186.9557531,
            Os => 191.9614807,
            Ir => 192.9629264,
            Pt => 194.9647911,
            Au => 196.9665687,
            Hg => 201.970643,
            Tl => 204.9744275,
            Pb => 207.9766521,
            Bi => 208.9803987,
            Po => 208.9824304,
            At => 209.987148,
            Rn => 222.0175777,
            Fr => 223.0197359,
            Ra => 226.0254098,
            Ac => 227.0277521,
            Th => 232.0380553,
            Pa => 231.035884,
            U => 238.0507882,
            Np => 237.0481734,
            Pu => 244.064204,
            Am => 243.0613811,
            Cm => 247.070354,
            Bk => 247.070307,
            Cf => 251.079587,
            Es => 252.08298,
            Fm => 257.095105,
            Md => 258.098431,
            No => 259.10103,
            Lr => 262.10963,
            Rf => 261.10877,
            Db => 262.11408,
            Sg => 263.11832,
            Bh => 264.1246,
            Hs => 265.13009,
            Mt => 268.13873,
            Ds => 271.14606,
            Rg => 272.15362,
        }
    }
}

#[bench]
fn bench_sum(b: &mut ::test::Bencher) {
    let glucose: [Element; 24] = [
        Element::C,
        Element::H,
        Element::H,
        Element::H,
        Element::H,
        Element::C,
        Element::H,
        Element::H,
        Element::H,
        Element::O,
        Element::O,
        Element::H,
        Element::H,
        Element::C,
        Element::O,
        Element::H,
        Element::C,
        Element::O,
        Element::H,
        Element::C,
        Element::H,
        Element::O,
        Element::C,
        Element::O,
    ];
    let glucose = ::test::black_box(&glucose);
    b.iter(|| {
        let n = ::test::black_box(1000);
        let mut acc = 0.0;
        for i in 0..n {
            acc += glucose[(i % 24)].atomic_mass();
        }
        acc
    })
}
